@model List<Application.ViewModels.vmPlc>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Plc Communication";
}
<style>
    .edit-value {
        width: 100px;
    }

    .save-button {
        margin: 0;
    }

    #plcTable_paginate {
        display: flex;
        justify-content: space-between
    }

    #plcTable_info {
        display: flex;
        justify-content: center
    }

    .dataTables_wrapper .dataTables_length,
    .dataTables_wrapper .dataTables_filter {
        margin-bottom: 10px;
    }

    .dataTables_wrapper .dataTables_length,
    .dataTables_wrapper .dataTables_filter {
        display: ruby-text;
        width: auto;
    }

    .dataTables_wrapper .dataTables_info {
        margin-top: 10px;
    }

    .card-header {
        background-color: gray;
        color: #fff;
    }

    .center-input {
        text-align: center;
    }

        .center-input input {
            margin: auto;
            display: block;
        }

</style>

<div class="container mt-5 mb-5">
    <div class="card">
        <div class="card-header text-center">
            <h2>Tag Communication</h2>
        </div>
        <div class="card-body">
            <div class="row mb-3">

                <div class="col-md-6">
                    <h2>Tag's</h2>
                </div>
                <div class="col-md-6 text-end">
                    <button class="btn btn-outline-info add-button">
                        <i class="fa fa-solid fa-plus"></i> Add new tag
                    </button>
                    <button class="btn btn-outline-warning get-updated-values">
                        <i class="fa fa-solid fa-rotate-right"></i> Update all tag values
                    </button>
                </div>
            </div>

            @if (Model.Count > 0)
            {
                <table id="plcTable" class="table table-striped table-responsive table-hover table-bordered  dt-responsive nowrap" style="width:100%">
                    <thead class="table-active">
                        <tr>
                            <th hidden>Id</th>
                            <th hidden>Address</th>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Last Value</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var plc in Model)
                        {
                            <tr>
                                <td hidden>@plc.Id</td>
                                <td hidden>@plc.AddressPlc</td>
                                <td width="48%">@plc.Name</td>
                                <td width="7%" class="text-center">@plc.Type</td>
                                <td width="15%" class="center-input">
                                    @{
                                        if (plc.Type == "bool")
                                        {
                                            int value = plc.Value.Equals("true") ? 1 : 0;
                                            <input type="number" class="form-control edit-value" min="0" max="1" step="1" onkeydown="return false;" value="@value" />
                                        }
                                        else if (plc.Type.Equals("int"))
                                        {
                                            <input type="number" class="form-control edit-value" min="0" max="9999999" step="1" onkeydown="return true;" value="@plc.Value" />
                                        }
                                        else if (plc.Type.Equals("double"))
                                        {
                                            <input type="number" class="form-control edit-value" min="0" max="9999999" step="0.1" onkeydown="return true;" value="@plc.Value" />
                                        }
                                    }
                                </td>

                                <td width="30%" class="text-center">
                                    <button class="btn btn-warning set-value-button" title="send a new value to tag"><i class="fa fa-solid fa-wrench"></i> Set value</button>
                                    <button class="btn btn-secondary details-button" title="edit tag in TagList"><i class="fa fa-solid fa-gear"></i> Edit tag</button>
                                    <button class="btn btn-danger delete-button" style="height: 38px;" title="delete tag in TagList"><i class="fa fa-solid fa-trash"></i> </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="row">
                    <p class="text-center">Not Found Tags</p>
                    <div class="row col-md-3 mx-auto">
                        <button class="btn btn-info add-button">Add tag</button>
                    </div>
                </div>
            }

            <div class="modal" id="detailsModal" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header justify-content-between">
                            <h5 class="modal-title">Tag</h5>
                            <button type="button" class="btn-close" data-dismiss="modal" onclick="closeModal()" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!---->
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" onclick="closeModal()" data-dismiss="modal">close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            var table = new DataTable('#plcTable', {
                "language": {
                    "url": "https://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/English.json",
                    "lengthMenu": "Mostrar _MENU_ registros por página",
                },
                "order": [[0, 'asc']],
                "fixedHeader": true,
                "pageLength": 15,
                "responsive": true
            });

            //update all tag values
            document.querySelector('.get-updated-values').addEventListener('click', async function () {
                try {
                    var listAddress = [];

                    document.querySelectorAll('#plcTable tbody tr').forEach(function (row) {
                        var address = row.querySelector('td:nth-child(2)').textContent.trim();
                        listAddress.push(address);
                    });

                    $.ajax({
                        url: '@Url.Action("GetValueFromPlc")',
                        type: 'POST',
                        data: { address: listAddress },
                        success: function (response) {
                            updateTableValues(response);
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching PLC values:', error)
                        }
                    });
                } catch (error) {
                    console.error('Error fetching PLC values:', error)
                }
            });

            //update a new value in tag
            $('.set-value-button').on('click', function () {
                var row = $(this).closest('tr');
                var id = row.find('td:eq(0)').text();
                var type = row.find('td:eq(3)').text();
                var value = row.find('.edit-value').val();

                if (type === "bool")
                    value = value === "1";

                var list = [{ Id: id, Type: type, Value: value }];

                $.ajax({
                    url: '@Url.Action("SetValueToPlc")',
                    type: 'POST',
                    data: { vmWrite: list },
                    success: function (response) {
                        window.location.href = '@Url.Action("TagList", "Management")';
                    },
                    error: function (xhr, status, error) {
                        window.location.href = '@Url.Action("TagList", "Management")';
                    }
                });
            });

            //Open tag Detail
            $('.details-button').on('click', function () {
                var row = $(this).closest('tr');
                var id = row.find('td:eq(0)').text();

                $.ajax({
                    url: '@Url.Action("EditTagInList")',
                    type: 'GET',
                    data: { idTag: id },
                    success: function (response) {
                        $('#detailsModal .modal-body').html(response);
                        $('#detailsModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        alert('Error');
                    }
                });
            });

            //Add Tag in List
            $('.add-button').on('click', function () {
                $.ajax({
                    url: '@Url.Action("AddTagInList")',
                    type: 'GET',
                    success: function (response) {
                        $('#detailsModal .modal-body').html(response);
                        $('#detailsModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        alert('Error');
                    }
                });
            });

            //Delete Tag in List
            $('.delete-button').on('click', function () {
                var row = $(this).closest('tr');
                var id = row.find('td:eq(0)').text();
                if (confirm(`Are you sure you want to delete this tag? \nIt will not be possible to reverse`)) {
                    $.ajax({
                        url: '@Url.Action("DeleteTagInList")',
                        type: 'Delete',
                        data: { id: id },
                        success: function (response) {
                            window.location.href = '@Url.Action("TagList", "Management")';
                        },
                        error: function (xhr, status, error) {
                            window.location.href = '@Url.Action("TagList", "Management")';
                        }
                    });
                }
            });

            function updateTableValues(data) {
                $('#plcTable tbody tr').each(function () {
                    var id = $(this).find('td:first').text().trim();
                    var plc = data.find(x => x.id == id);

                    if (plc) {
                        if (plc.type == 'bool') {
                            $(this).find('.edit-value').val(plc.value == 'true' ? 1 : 0);
                        } else if (plc.type == 'double') {
                            $(this).find('.edit-value').val(parseFloat(plc.value));
                        } else {
                            $(this).find('.edit-value').val(parseInt(plc.value, 10));
                        }
                    }
                });
            }
        });
    </script>
}
