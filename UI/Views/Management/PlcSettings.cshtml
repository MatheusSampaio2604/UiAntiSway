@model Application.ViewModels.vmPlcSettings

@{
    ViewData["Title"] = "PlcSettings";
}

<style>
    .btn-warning {
        background-color: #ffc107;
        border-color: #ffc107;
        color: #212529;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
        color: #fff;
    }

    .button {
        width: 300px;
        height: 40px;
    }

    .card-header {
        background-color: gray;
        color: #fff;
    }

    .card-body {
        background-color: #e3e0e0;
    }
</style>

<div class="container mt-3 ">
    <div class="card d-flex">
        <div class="card-header text-center">
            <h1>PLC SETTING</h1>
        </div>
        <div class="card-body">
            <form asp-action="PlcSettings" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="row">

                    <div class="col-md-6 mx-auto">
                        <div class="form-group">
                            <label asp-for="Driver" class="control-label"></label>
                            <select asp-for="Driver" class="form-select bg-light text-dark" id="Brand"
                                    asp-items="@(ViewBag.Driver as SelectList)"
                                    aria-describedby="ListCpuType">
                                <option selected disabled value="">Select one</option>
                            </select>
                            <span asp-validation-for="Driver" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Ip1" class="control-label"></label>
                            <input asp-for="Ip1" class="form-control" required />
                            <span asp-validation-for="Ip1" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="CpuType" class="control-label"></label>
                            <select asp-for="CpuType" class="form-select bg-light text-dark" id="CpuType"
                                    asp-items="@(ViewBag.ListCpuType as SelectList)"
                                    aria-describedby="ListCpuType">
                                <option selected disabled value="">Select one</option>
                            </select>
                            <span asp-validation-for="CpuType" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Rack" class="control-label"></label>
                            <input asp-for="Rack" type="number" min="0" max="100" step="1" onkeydown="return false;" inputmode="numeric" class="form-control" required />
                            <span asp-validation-for="Rack" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Slot" class="control-label"></label>
                            <input asp-for="Slot" type="number" min="0" max="100" step="1" onkeydown="return false;" inputmode="numeric" class="form-control" required />
                            <span asp-validation-for="Slot" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row text-center mt-3">
                    <div class="col-md-6">
                        <button type="submit" class="btn button btn-outline-success">
                            <i class="fa fa-solid fa-download"></i> Save
                        </button>
                    </div>
                    <div class="col-md-6">
                        <input id="testConn" type="button" value="Test Connection" class="btn button btn-outline-secondary custom-btn" />
                        <p class="mt-2">*After modifying, save and then test!</p>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', (event) => {

    });

    //only for testConn
    document.getElementById('testConn').addEventListener('click', async function () {
        var btn = this;
        var counter = 15;

        btn.value = 'Await ' + counter + '...';
        btn.classList.remove('btn-outline-secondary', 'btn-warning', 'btn-success', 'btn-danger');
        btn.classList.add('btn-warning');

        var interval = setInterval(function () {
            counter--;
            btn.value = 'Await ' + counter + '...';
            if (counter <= 0) {
                clearInterval(interval);
            }
        }, 1000);

        try {
            const response = await fetch('@Url.Action("TestConnectionPlc")', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.message);
            }

            clearInterval(interval);
            btn.value = 'Successfully';
            btn.classList.remove('btn-outline-secondary', 'btn-warning', 'btn-danger');
            btn.classList.add('btn-success');

            setTimeout(function () {
                btn.value = 'Test Connection';
                btn.classList.remove('btn-success');
            }, 5000);
        } catch (error) {
            clearInterval(interval);

            console.warn(error);

            btn.value = 'Unsuccessfully';
            btn.classList.remove('btn-outline-secondary', 'btn-success', 'btn-warning');
            btn.classList.add('btn-danger');

            setTimeout(function () {
                btn.value = 'Test Connection';
                btn.classList.remove('btn-warning', 'btn-success', 'btn-danger');
                btn.classList.add('btn-outline-secondary');
            }, 5000);
        }
    });
</script>
