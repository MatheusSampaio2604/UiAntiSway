@model Application.ViewModels.vmPlcSettings

@{
    ViewData["Title"] = "PlcSettings";
}

<style>
    .btn-warning {
        background-color: #ffc107;
        border-color: #ffc107;
        color: #212529;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
        color: #fff;
    }

    .button {
        width: 300px;
        height: 40px;
    }

</style>


<h1 class="text-center">PLC SETTING</h1>

<hr />

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
    await Task.Delay(1000);
    TempData["SuccessMessage"] = null;
}

<div class="row">
    <form asp-action="PlcSettings" method="post">
        <div class="col-md-12 row">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Ip1" class="control-label"></label>
                    <input asp-for="Ip1" class="form-control" />
                    <span asp-validation-for="Ip1" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CpuType" class="control-label"></label>
                    <select asp-for="CpuType" class="form-select bg-light text-dark" id="CpuType"
                            asp-items="@(ViewBag.ListCpuType as SelectList)"
                            aria-describedby="ListCpuType">
                        <option selected disabled value="">Selecione</option>
                    </select>
                    <span asp-validation-for="CpuType" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Rack" class="control-label"></label>
                    <input asp-for="Rack" type="number" min="0" max="100" step="1" onkeydown="return false;" inputmode="numeric" class="form-control" />
                    <span asp-validation-for="Rack" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Slot" class="control-label"></label>
                    <input asp-for="Slot" type="number" min="0" max="100" step="1" onkeydown="return false;" inputmode="numeric" class="form-control" />
                    <span asp-validation-for="Slot" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row text-center">
                <div class="col-md-6">
                    <input type="submit" value="Save" class="btn button btn-success mt-3" />
                </div><div class="col-md-6">
                    <input id="testConn" type="button" value="Test Connection" class="btn button btn-outline-secondary custom-btn mt-3" />
                    <p>*After modifying, save and then test!</p>
                </div>
            </div>
        </div>
    </form>
</div>
<script>
    document.getElementById('testConn').addEventListener('click', async function () {
        var btn = this;

        btn.value = 'Await';
        btn.classList.remove('btn-outline-secondary', 'btn-warning', 'btn-success', 'btn-danger');
        btn.classList.add('btn-warning');

        try {
            const response = await fetch('@Url.Action("TestConnectionPlc")', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                throw new Error('Connection Error');
            }

            btn.value = 'Successfully';
            btn.classList.remove('btn-outline-secondary', 'btn-warning', 'btn-danger');
            btn.classList.add('btn-success');

            setTimeout(function () {
                btn.value = 'Test Connection';
                btn.classList.remove('btn-success');
            }, 5000);
        } catch (error) {
            btn.value = 'Unsuccessfully';
            btn.classList.remove('btn-outline-secondary', 'btn-success', 'btn-warning');
            btn.classList.add('btn-danger');

            setTimeout(function () {
                btn.value = 'Test Connection';
                btn.classList.remove('btn-warning', 'btn-success', 'btn-danger');
                btn.classList.add('btn-outline-secondary');
            }, 5000);
        }
    });

</script>
